<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 森的博客</title>
        <link>https://qq2514568380.github.io/posts/</link>
        <description>All Posts | 森的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2514568380@qq.com (李森)</managingEditor>
            <webMaster>2514568380@qq.com (李森)</webMaster><lastBuildDate>Wed, 22 May 2024 11:21:26 &#43;0800</lastBuildDate><atom:link href="https://qq2514568380.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>抽象工厂模式的具体实现</title>
    <link>https://qq2514568380.github.io/17/</link>
    <pubDate>Wed, 22 May 2024 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/17/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/lighthouse.jpg" referrerpolicy="no-referrer">
            </div>1. 图形用户界面（GUI）组件 场景：创建不同操作系统的 GUI 组件，如按钮和文本框。 应用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30]]></description>
</item>
<item>
    <title>策略模式的具体实现</title>
    <link>https://qq2514568380.github.io/16/</link>
    <pubDate>Tue, 21 May 2024 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/16/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/lighthouse.jpg" referrerpolicy="no-referrer">
            </div>设计模型具体实现 1. 支付方式选择 场景：在电商应用中，用户可以选择不同的支付方式（如信用卡、PayPal、比特币）。 实现 1 2 3 4 5 6 7 8 9 10 11 12]]></description>
</item>
<item>
    <title>王府井</title>
    <link>https://qq2514568380.github.io/14/</link>
    <pubDate>Thu, 18 Jan 2024 18:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/14/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/27.jpg" referrerpolicy="no-referrer">
            </div>王府井]]></description>
</item>
<item>
    <title>下班途中</title>
    <link>https://qq2514568380.github.io/15/</link>
    <pubDate>Wed, 03 Jan 2024 18:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/15/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/30.jpg" referrerpolicy="no-referrer">
            </div>王府井]]></description>
</item>
<item>
    <title>自学响应式编程(一)</title>
    <link>https://qq2514568380.github.io/13/</link>
    <pubDate>Mon, 01 Jan 2024 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/13/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/lighthouse.jpg" referrerpolicy="no-referrer">
            </div>自学响应式编程(一) 1、Lambda 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52]]></description>
</item>
<item>
    <title>代码优化之去掉if else</title>
    <link>https://qq2514568380.github.io/10/</link>
    <pubDate>Wed, 20 Dec 2023 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/10/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/18.jpg" referrerpolicy="no-referrer">
            </div>代码优化之去掉if else 方式一 - 工厂类 定义一个操作接口 1 2 3 public interface Operation { int apply(int a, int b); } 实现操作， 这里只以add为例 1 2 3 4 5 6 public class Addition implements Operation { @Override public int apply(int a, int]]></description>
</item>
<item>
    <title>傍晚的什刹海</title>
    <link>https://qq2514568380.github.io/12/</link>
    <pubDate>Thu, 30 Nov 2023 18:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/12/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/21.jpg" referrerpolicy="no-referrer">
            </div>功能测试文章]]></description>
</item>
<item>
    <title>北京老街</title>
    <link>https://qq2514568380.github.io/8/</link>
    <pubDate>Wed, 29 Nov 2023 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/8/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/12.jpg" referrerpolicy="no-referrer">
            </div>北京老街]]></description>
</item>
<item>
    <title>杂拍</title>
    <link>https://qq2514568380.github.io/5/</link>
    <pubDate>Tue, 28 Nov 2023 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/5/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/1.jpg" referrerpolicy="no-referrer">
            </div>地铁站]]></description>
</item>
<item>
    <title>docker-compose怎么来的</title>
    <link>https://qq2514568380.github.io/6/</link>
    <pubDate>Tue, 21 Nov 2023 11:21:26 &#43;0800</pubDate>
    <author>李森</author>
    <guid>https://qq2514568380.github.io/6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/lighthouse.jpg" referrerpolicy="no-referrer">
            </div>转载自4'000 Stars and counting, a trip down memory lane 我很幸运能够在 2014 年成为第一批踏上 Docker 之旅的人之一，尝试将监控堆栈容器化。我在 2014 年初开始了解 Docker，并花了]]></description>
</item>
</channel>
</rss>
